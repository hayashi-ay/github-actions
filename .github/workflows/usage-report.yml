name: Usage Report
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:

  get-actions-usage:
    runs-on: ubuntu-latest
    outputs:
      usage: ${{ steps.get_actions_billing_for_user.outputs.data }}
      issue-body: ${{ steps.create_issue_body.outputs.body }}
    steps:
      - name: Get Actions Billing For User
        uses: octokit/request-action@v2.x
        id: get_actions_billing_for_user
        with:
          route: GET /users/{username}/settings/billing/actions
          username: hayashi-ay
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
      - run: "echo latest release: '${{ fromJson(steps.get_actions_billing_for_user.outputs.data).total_minutes_used }}'"
      - name: Create Issue body
        id: create_issue_body
        run: |
          echo "body=issue_body" >> $GITHUB_OUTPUT

  find-issue:
    runs-on: ubuntu-latest
    needs: get-actions-usage
    outputs:
      issue-number: ${{ steps.set-issue-number.outputs.issue-number }}
    steps:
    - name: Find issues
      uses: actions-cool/issues-helper@v3
      id: find-issues
      with:
        actions: 'find-issues'
        token: ${{ secrets.PAT }}
        repo: hayashi-ay/e-book
        issue-state: 'open'
        title-includes: 'Usage Report'
    - name: Set Issue Number
      id: set-issue-number
      run: |
        issue_number=$(echo '${{ steps.find-issues.outputs.issues }}' | jq '.[0].number')
        echo "issue-number=$issue_number" >> $GITHUB_OUTPUT

  update-issue:
    runs-on: ubuntu-latest
    needs: find-issue
    if: always()
    steps:
      - name: update-issue-test
        run: |
          echo '${{ needs.find-issue.outputs.issue-number }}'
      - name: Update Issue
        uses: actions-cool/issues-helper@v3
        id: update-issues
        with:
          actions: 'update-issue'
          token: ${{ secrets.PAT }}
          repo: hayashi-ay/e-book
          issue-number: '${{ needs.find-issue.outputs.issue-number }}'
          title: 'Usage Report'
          update-mode: 'replace'
          #body: '${{ needs.get-actions-usage.outputs.issue-body }}'
          body: 'yyy'

  create-issue:
    runs-on: ubuntu-latest
    needs: find-issue
    if: false
    steps:
      - name: Create Issue
        uses: actions-cool/issues-helper@v3
        id: update-issues
        with:
          actions: 'update-issue'
          token: ${{ secrets.PAT }}
          repo: hayashi-ay/e-book
          title: 'Usage Report'
          body: 'x'
