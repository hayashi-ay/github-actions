name: Usage Report
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:

  get-actions-usage:
    runs-on: ubuntu-latest
    outputs:
      usage: ${{ steps.get_actions_billing_for_user.outputs.data }}
    steps:
      - uses: octokit/request-action@v2.x
        id: get_actions_billing_for_user
        with:
          route: GET /users/{username}/settings/billing/actions
          username: hayashi-ay
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
      - run: "echo latest release: '${{ fromJson(steps.get_actions_billing_for_user.outputs.data).total_minutes_used }}'"

  find-issue:
    runs-on: ubuntu-latest
    needs: get-actions-usage
    outputs:
      issue-number: ${ steps.set-issue-number.outputs.issue-number}
    steps:
    - name: Find issues
      uses: actions-cool/issues-helper@v3
      id: find-issues
      with:
        actions: 'find-issues'
        token: ${{ secrets.PAT }}
        repo: hayashi-ay/e-book
        issue-state: 'open'
        title-includes: 'Usage Report'
    - name: Set Issue Number
      id: set-issue-number
      run: |
        issue_number=$(echo '${{ steps.find-issues.outputs.issues }}' | jq '.[0].number')
        echo "issue-number=$issue_number" >> $GITHUB_OUTPUT

  update-issue:
    runs-on: ubuntu-latest
    needs: find-issue
    if: always()
    steps:
      - name: update-issue
        run: |
          echo '${{ needs.find-issue.outputs.issue-number }}'
          echo '${{ needs.get-actions-usage.outputs.usage }}'
    #- name: Create issue
    #  uses: actions-cool/issues-helper@v3
    #  with:
    #    actions: 'create-issue'
    #    token: ${{ secrets.PAT }}
    #    repo: hayashi-ay/e-book
    #    title: 'test'
    #    body: 'test'
